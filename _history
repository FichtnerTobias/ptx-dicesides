{"entries":[{"timestamp":1731340617107,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"pt-only\""],[1,",\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":280,"start2":280,"length1":11,"length2":42}]}]},{"timestamp":1731340643767,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let dicesides: number = 6;\nconst dicemax: number = 99;\nconst dicemin: number = 2;\nlet buttnpress: number = 0;\nlet lock: boolean = true\n\nwhile (true) {\n\n    if (lock) {\n        if (input.buttonIsPressed(Button.A)) {\n            if (dicesides > dicemin) {\n                dicesides = dicesides - 1\n                basic.showNumber(dicesides)\n            }\n        }\n\n        if (input.buttonIsPressed(Button.B)) {\n            if (dicesides < dicemax) {\n                dicesides = dicesides + 1\n                basic.showNumber(dicesides)\n            }\n        }\n\n\n\n        if (input.isGesture(Gesture.Shake)) {\n            let dicerandom = randint(dicemin, dicesides)\n            basic.showNumber(dicerandom)\n            lock = false\n        }\n\n    }\n\n    if (input.logoIsPressed()) {\n        music.play(music.tonePlayable(Note.C, music.beat(BeatFraction.Whole)), music.PlaybackMode.UntilDone)\n        lock = true\n        basic.showLeds(\n. #.#.\n. . . . .\n# # # # #\n            . . .# #\n                . . .# #\n        )\n    }\n\n}"],[0,"\n"]],"start1":0,"start2":0,"length1":1029,"length2":1}]}]},{"timestamp":1731771579723,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"= true\n\n"],[1,"while (true) {\n\n    if (lock) {\n        if (input.buttonIsPressed(Button.A)) {\n            if (dicesides > dicemin) {\n                dicesides = dicesides - 1\n                basic.showNumber(dicesides)\n            }\n        }\n\n        if (input.buttonIsPressed(Button.B)) {\n            if (dicesides < dicemax) {\n                dicesides = dicesides + 1\n                basic.showNumber(dicesides)\n            }\n        }\n\n\n\n        if (input.isGesture(Gesture.Shake)) {\n            let dicerandom = randint(dicemin, dicesides)\n            basic.showNumber(dicerandom)\n            lock = false\n        }\n\n    }\n\n    if (input.logoIsPressed()) {\n        music.play(music.tonePlayable(Note.C, music.beat(BeatFraction.Whole)), music.PlaybackMode.UntilDone)\n        lock = true\n        basic.showLeds(\n. #.#.\n. . . . .\n# # # # #\n            . . .# #\n                . . .# #\n        )\n    }\n\n}"],[0,"\n"]],"start1":128,"start2":128,"length1":9,"length2":901}]}]},{"timestamp":1731772738594,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ue\n\n"],[-1,"while (true) {\n\n    if (lock) {\n        if (input.buttonIsPressed(Button.A)) {\n            if (dicesides > dicemin) {\n                dicesides = dicesides - 1\n                basic.showNumber(dicesides)\n            }\n        }\n\n        if (input.buttonIsPressed(Button.B)) {\n            if (dicesides < dicemax) {\n                dicesides = dicesides + 1\n                basic.showNumber(dicesides)\n            }\n        }\n\n\n\n        if (input.isGesture(Gesture.Shake)) {\n            let dicerandom = randint(dicemin, dicesides)\n            basic.showNumber(dicerandom)\n            lock = false\n        }\n\n    }\n\n    if (input.logoIsPressed()) {\n        music.play(music.tonePlayable(Note.C, music.beat(BeatFraction.Whole)), music.PlaybackMode.UntilDone)\n        lock = true\n        basic.showLeds(\n. #.#.\n. . . . .\n# # # # #\n            . . .# #\n                . . .# #\n        )\n    }\n\n}\n"],[0,"\n"]],"start1":132,"start2":132,"length1":898,"length2":5}]}]},{"timestamp":1731772751141,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"rue\n"],[-1,"        \n"],[0,"    "]],"start1":909,"start2":909,"length1":17,"length2":8},{"diffs":[[0,"eds("],[-1,"`\n        . # . # .\n        "],[1,"\n. #.#.\n"],[0,". . "]],"start1":932,"start2":932,"length1":36,"length2":16},{"diffs":[[0,". . . .\n"],[-1,"        "],[0,"# # # # "]],"start1":946,"start2":946,"length1":24,"length2":16},{"diffs":[[0,"# # # #\n"],[1,"    "],[0,"        "]],"start1":956,"start2":956,"length1":16,"length2":20},{"diffs":[[0," . ."],[1,"#"],[0," #"],[-1," # \n"],[1,"\n      "],[0,"        "],[-1,"."],[1," "],[0," . . "],[1,"."],[0,"# #"],[-1," "],[0,"\n   "]],"start1":977,"start2":977,"length1":32,"length2":36},{"diffs":[[0,"    "],[-1,"`"],[0,")\n  "]],"start1":1014,"start2":1014,"length1":9,"length2":8}]}]},{"timestamp":1737656095390,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":208,"start2":208,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1731340617106,"editorVersion":"7.0.51","text":{"main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"RandomNumber\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\",\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1731771579723,"editorVersion":"7.0.51","text":{"main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"RandomNumber\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1737656095390,"editorVersion":"7.0.57","text":{"main.ts":"let dicesides: number = 6;\nconst dicemax: number = 99;\nconst dicemin: number = 2;\nlet buttnpress: number = 0;\nlet lock: boolean = true\n\nwhile (true) {\n\n    if (lock) {\n        if (input.buttonIsPressed(Button.A)) {\n            if (dicesides > dicemin) {\n                dicesides = dicesides - 1\n                basic.showNumber(dicesides)\n            }\n        }\n\n        if (input.buttonIsPressed(Button.B)) {\n            if (dicesides < dicemax) {\n                dicesides = dicesides + 1\n                basic.showNumber(dicesides)\n            }\n        }\n\n\n\n        if (input.isGesture(Gesture.Shake)) {\n            let dicerandom = randint(dicemin, dicesides)\n            basic.showNumber(dicerandom)\n            lock = false\n        }\n\n    }\n\n    if (input.logoIsPressed()) {\n        music.play(music.tonePlayable(Note.C, music.beat(BeatFraction.Whole)), music.PlaybackMode.UntilDone)\n        lock = true\n        \n        basic.showLeds(`\n        . # . # .\n        . . . . .\n        # # # # #\n        . . . # # \n        . . . # # \n        `)\n    }\n\n}\n\n","README.md":"","pxt.json":"{\n    \"name\": \"RandomNumber\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}}],"shares":[],"lastSaveTime":1737656095392}